:root {
	--grid-width: 25px;
	--grid-height: 25px;
	--line-color: #99999900;
	--dot-color: #ccc;
	--dot-size: 3px;
	--point-gap-width: calc(var(--grid-width) * 4);
	--point-gap-height: calc(var(--grid-height) * 4);
}

.grid-bg {
	min-width: 100vw;
	min-height: 100vh;
	overflow: hidden;
}

.ba-grid {
	position: fixed;
	top: 0;
	left: 0;
	z-index: -10;

	background-image: 
/*     radial-gradient(ellipse at center, #2883b6 0%, #084688 100%), */ radial-gradient(ellipse at bottom left, rgba(14, 17, 19, 0.4) 10%, rgba(138, 114, 76, 0) 40%),
		linear-gradient(to bottom, rgba(17, 24, 27, 0.25), rgba(16, 20, 27, 0.4)), linear-gradient(135deg, #580d0f, #082149);
}

.ba-grid:before,
.ba-grid:after,
.inner:before,
.inner:after {
	content: '';
	position: absolute;
	z-index: 1;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	mix-blend-mode: overlay;
}

.ba-grid:before {
	background-image: linear-gradient(var(--line-color), transparent 1px), linear-gradient(to right, var(--line-color), transparent 1px);
	background-size: 100% var(--grid-height), var(--grid-width) 100%;
}

.ba-grid:after {
	background-image: radial-gradient(var(--dot-color) 1px, transparent 1px);
	background-size: var(--point-gap-width) var(--point-gap-height);
	background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
}

.inner:before,
.inner:after {
	background-image: radial-gradient(var(--dot-color) var(--dot-size), transparent var(--dot-size));
	background-size: var(--point-gap-width) var(--point-gap-height);
	background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
}

.inner:after {
	transform: scale(1.1, 1.1);
}

.inner:before {
	/*   background-image: radial-gradient(var(--dot-color) calc(var(--dot-size) + 1px), transparent calc(var(--dot-size) + 1px)); */
	transform: scale(1.2, 1.2);
}

.anim:after {
	animation: 6.4s linear move infinite;
}

.anim .inner:after {
	animation: 3.2s linear move infinite;
}

.anim .inner:before {
	animation: 1.6s linear move infinite;
}

@keyframes move {
	0% {
		background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2);
	}
	100% {
		background-position: calc(var(--point-gap-width) / 2) calc(var(--point-gap-height) / 2 * -1);
	}
}
